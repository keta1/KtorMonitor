import kotlin.String;
import kotlin.Boolean;
import kotlin.collections.List;
import kotlin.collections.Map;

CREATE TABLE IF NOT EXISTS call(
  id TEXT PRIMARY KEY NOT NULL,
  method TEXT NOT NULL,
  url TEXT NOT NULL,
  protocol TEXT DEFAULT NULL,
  requestTimestamp INTEGER NOT NULL,
  requestHeaders TEXT AS Map<String, List<String>> NOT NULL,
  requestContentType TEXT DEFAULT NULL,
  requestContentLength INTEGER NOT NULL,
  requestBody BLOB DEFAULT NULL,
  isRequestBodyTruncated INTEGER AS Boolean DEFAULT 0,
  responseCode INTEGER DEFAULT NULL,
  responseTimestamp INTEGER DEFAULT NULL,
  responseContentType TEXT DEFAULT NULL,
  responseHeaders TEXT AS Map<String, List<String>> DEFAULT NULL,
  responseContentLength INTEGER DEFAULT NULL,
  responseBody BLOB DEFAULT NULL,
  isResponseBodyTruncated INTEGER AS Boolean DEFAULT 0,
  error TEXT DEFAULT NULL
);

saveRequest:
INSERT INTO call (id, method, url, requestTimestamp, requestHeaders, requestContentType, requestContentLength, requestBody, isRequestBodyTruncated) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

saveResponse:
UPDATE call SET protocol = ?, requestTimestamp = ?, responseCode = ?, responseTimestamp = ?, responseContentType = ?, responseHeaders = ? WHERE id = ?;

saveResponseBody:
UPDATE call SET responseContentLength = ?, responseBody = ?, isResponseBodyTruncated = ? WHERE id = ?;

saveError:
UPDATE call SET error = ? WHERE id = ?;

selectCalls:
SELECT id, method, url, requestTimestamp, responseCode, responseTimestamp, responseContentType, responseContentLength, error FROM call ORDER BY requestTimestamp DESC;

selectCallsWithLimit:
SELECT id, method, url, requestTimestamp, responseCode, responseTimestamp, responseContentType, responseContentLength, error FROM call ORDER BY requestTimestamp DESC LIMIT ?;

selectCall:
SELECT id, method, url, protocol, requestTimestamp, requestHeaders, requestContentType, requestContentLength, requestBody, isRequestBodyTruncated, responseCode, responseTimestamp, responseContentType, responseHeaders, responseContentLength, responseBody, isResponseBodyTruncated, error FROM call WHERE id = ?;

deleteCalls:
DELETE FROM call;

deleteCallsBefore:
DELETE FROM call WHERE requestTimestamp < ?;